/*
 mean-workout 2016-01-01 
*/
!function(){angular.module("meanWorkout",["ui.bootstrap","ui.router","ui.calendar","ExerciseCtrl","WorkoutCtrl","SessionCtrl","ExerciseService","WorkoutService","menuDirective","appRoutes"])}(),angular.module("appRoutes",[]).config(["$stateProvider","$urlRouterProvider",function(a,b){a.state("home",{url:"/home",templateUrl:"../views/home.view.html"}).state("exercises",{url:"/exercises",templateUrl:"../views/exercise-list.view.html",controller:"ExerciseCtrl",resolve:{exercisePromise:["exercises",function(a){return a.getAll()}]}}).state("workouts",{url:"/workouts",templateUrl:"../views/workout-list.view.html",controller:"WorkoutCtrl",resolve:{workoutPromise:["workouts",function(a){return a.getAll()}],exercisePromise:["exercises",function(a){return a.getAll()}]}}).state("sessions",{url:"/sessions",templateUrl:"../views/session-list.view.html",controller:"SessionCtrl"}),b.otherwise("sessions")}]),angular.module("ExerciseCtrl",[]).controller("ExerciseCtrl",["$scope","exercises",function(a,b){a.objectName="Exercise",a.exercises=b.exercises,a.keys=["name","category","description","actions"],a.formName="New Exercise",a.toggleForm=function(){a.isFormVisible?a.isFormVisible=!1:a.isFormVisible=!0},a.addExercise=function(){a.name&&a.description&&a.category&&(b.create({name:a.name,description:a.description,category:a.category}),a.name="",a.description="",a.category="",a.toggleForm())},a.deleteExercise=function(a){b["delete"](a)}}]),angular.module("SessionCtrl",[]).controller("SessionCtrl",["$scope","$compile","uiCalendarConfig",function(a,b,c){var d=new Date,e=d.getDate(),f=d.getMonth(),g=d.getFullYear();a.events=[{title:"All Day Event",start:new Date(g,f,1)},{title:"Long Event",start:new Date(g,f,e-5),end:new Date(g,f,e-2)},{id:999,title:"Repeating Event",start:new Date(g,f,e-3,16,0),allDay:!1},{id:999,title:"Repeating Event",start:new Date(g,f,e+4,16,0),allDay:!1},{title:"Birthday Party",start:new Date(g,f,e+1,19,0),end:new Date(g,f,e+1,22,30),allDay:!1},{title:"Click for Google",start:new Date(g,f,28),end:new Date(g,f,29)}],a.alertOnEventClick=function(b,c,d){console.log(b.title+" was clicked "),a.alertMessage=b.title+" was clicked "},a.alertOnDrop=function(b,c,d,e,f,g){a.alertMessage="Event Droped to make dayDelta "+c},a.alertOnResize=function(b,c,d,e,f,g){a.alertMessage="Event Resized to make dayDelta "+c},a.addEvent=function(){a.events.push({title:"Open Sesame",start:new Date(g,f,28),end:new Date(g,f,29),className:["openSesame"]})},a.remove=function(b){a.events.splice(b,1)},a.changeView=function(a,b){c.calendars[b].fullCalendar("changeView",a)},a.renderCalender=function(a){c.calendars[a]&&c.calendars[a].fullCalendar("render")},a.eventRender=function(c,d,e){d.attr({"uib-tooltip":c.title,"tooltip-append-to-body":!0}),b(d)(a)},a.uiConfig={calendar:{editable:!0,eventClick:a.alertOnEventClick,eventDrop:a.alertOnDrop,eventResize:a.alertOnResize,eventRender:a.eventRender}},a.eventSources=[a.events]}]),angular.module("WorkoutCtrl",[]).controller("WorkoutCtrl",["$scope","workouts","exercises",function(a,b,c){a.objectName="Workout",a.workouts=b.workouts,a.keys=["name","description"],a.exerciseKeys=["exercise","description","category"],a.exercises=c.exercises,a.selectedWorkout=void 0,a.selectedExercise=void 0,a.toggleForm=function(){a.isFormVisible=!a.isFormvisible},a.addExercise=function(b){a.selectedWorkout=b,console.log("Workout: ",a.selectedWorkout),a.toggleForm()},a.onSelect=function(c,d,e){a.$item=c,a.$model=d,a.$label=e,a.selectedExercise=a.$item,console.log("Exercise: ",a.selectedExercise),a.selectedWorkout.exercises.push(a.selectedExercise);var f={_id:a.selectedWorkout._id},g=a.selectedWorkout;b.update(f,g,function(a,b){return a?handleError(a):void console.log("The response from mongo was ",raw)})}}]),angular.module("menuDirective",[]).directive("menu",function(){var a=["$scope",function(a){a.title="MEAN Workout",a.isCollapsed=!0,a.toggleMenu=function(){a.isCollapsed=!a.isCollapsed}}];return{restrict:"E",templateUrl:"../views/menu.view.html",controller:a,controllerAs:"menu"}}),angular.module("ExerciseService",[]).factory("exercises",["$http",function(a){var b={exercises:[]};return b.getAll=function(){return a.get("/api/exercises").success(function(a){angular.copy(a,b.exercises)})},b.get=function(b){return a.get("/api/exercises/"+b).then(function(a){return a.data})},b.create=function(c){return a.post("/api/exercises",c).success(function(a){b.exercises.push(a)})},b.update=function(b){return a.put("/api/exercises/"+b._id,null).success(function(a){b=b})},b["delete"]=function(c){a["delete"]("/api/exercises/"+c).then(function(a){for(var d=0;d<b.exercises.length;d++)if(b.exercises[d]._id===c){b.exercises.splice(d,1);break}return a.data})},b}]),angular.module("WorkoutService",[]).factory("workouts",["$http",function(a){var b={workouts:[]};return b.getAll=function(){return a.get("/api/workouts").success(function(a){angular.copy(a,b.workouts)})},b.create=function(c){return a.post("/api/workouts",c).success(function(a){b.workouts.push(a)})},b.update=function(b){return a.put("/api/workouts/"+b._id,null).success(function(a){b=b})},b}]);